Telecommunicatiesystemen: Mobile IP in Click Modular Router
===========================================================

Daniel Frenkel    Jakob Struye
20120710          20120612
-------------------------------

Eindevaluatie
----------------------

1) Werking en volgorde van de elementen
=======================================

  A) Agent advertisements:
  -----------------------

    -De AgentAdvertisementSender in de home en foreign agent genereert en stuurt automatisch Agent Advertisements
    -Deze worden ontvangen door de RegistrationRequestSender in de mobile node
    -Indien de mobile node geen actieve registratie had, zal de RegistrationRequestSender een Registration Request genereren
    -De relevante informatie van de advertisement wordt sowieso bijgehouden, voor verder gebruik.

  B) Registration Requests en Replies
  ------------------------

    -De RegistrationRequestSender stuurt Registration Requests en bewaart relevante informatie van de Pending Request
    -In de foreign agent passeert de Request (nog in ethernetheader) eerst door de VisitorList, waar een entry wordt aangemaakt die relevante info van de Request opslaat
    -Daarna ontvangt de ForeignRequestProcess de Request (in IP-header). Deze valideert de Request. Bij een geaccepteerde Request worden de IP- en UDP-headers aangepast en wordt het pakket doorgestuurd, bij een geweigerde Request wordt een Reply gegenereerd en terug naar de mobile node gestuurd.
    -In de home agent passeert de Request (in IP-header) eerst door de MobilityBindingList, waar een entry wordt aangemaakt die relevante info van de gevraagde binding opslaat.
    -Daarna ontvangt de HomeRequestProcess de Request. Deze valideert de Request en genereert een Reply met code afhankelijk van de uitkomst van de validatie.
    -De MobilityBindingList ontvangt de nieuwe Reply en verwijdert de binding als de Reply aangeeft dat de Request geweigerd is.
    -HomeRequestProcess ontvangt terug de nieuwe Reply, nu in UDP- en IP-headers en past deze aan (aan de hand van opgeslagen data van de Request) en stuurt deze door
    -In de foreign agent ontvangt eerst de ForeignreplyProcess de Reply, dat Replies van andere pakketten scheidt en Replies valideert.
    -Daarna ontvangt terug de VisitorList de Reply. De visitor list entry wordt aangepast, UDP-, IP- en ethernetheaders van de Reply worden aangepast en het pakket wordt doorgestuurd.
    -In de mobile node ontvangt de RegistrationRequestSender de Reply en wordt de registration opgeslagen als de Request geaccepteerd is.

    -Wanneer een Registration bijna timed out is, stuurt de mobile node een nieuwe Registration Request
    -Wanneer een Registration timed out is en de mobile node nog van een andere agent Advertisements ontvangt, wordt daarnaar een Registration Request gestuurd.
    -Wanneer de mobile node geen Advertisements meer ontvangt van de agent waarop hij geregistreerd is, wordt de registratie verwijderd (en wordt eventueel met een andere agent geregistreerd)
    -Wanneer een reset van een agent waarbij de node geregistreerd is, wordt gedetecteerd adhv sequence numbers, wordt opnieuw geregistreerd.


    -MERK OP: move detection gebeurt aan de hand van het algoritme in de RFC: movement wordt pas gedetecteerd wanneer de lifetime van de laatst ontvangen Advertisement verstreken is. Dit betekent dat voor een vlotte detectie deze lifetimes kort moeten worden ingesteld. Dit betekent ook dat na het verplaatsen van de mobile node, hij even onbereikbaar wordt; het is dus te verwachten dat enkele pings niet beantwoord worden in het testscript.

  C) Tunneling
  ------------

    -Alle pakketten voor het lokale netwerk in de home agent worden door de MobilityBindingList gestuurd. Deze scheidt te tunnelen pakketten (==met mobility binding voor destination IP) van niet te tunnelen pakketten.
    -Het standaardelement IPEncap van Click plaatst te tunnelen pakketten in een tweede IP-header. Deze worden door een Encapsulator gestuurd: deze scheidt enkel correct geëncapsuleerde pakketten van loopende pakketten.
    -De getunnelde pakketten worden nog eens door de MobilityBindingList gestuurd, om de IP-header correct in te vullen.
    -In de foreign agent worden standaardelementen IPClassifier en Strip gebruikt om getunnelde pakketten te herkennen en detunnelen.
    -Verder worden ze nog door de VisitorList gestuurd om het MAC destination address correct in te vullen
    -De pakketten worden doorgestuurd naar de mobile node, die niet weet dat dit pakket getunneld was en het als eender welk ander pakket behandelt.

2) Configuraties van elementen
==============================

Sommige elementen moeten worden geconfigureerd in scripts. Alle argumenten van de configuratie zijn verplicht.

  A) AgentAdvertisementSender
  ---------------------------
    IP: (IPAddress) het IP-adres te gebruiken in de Advertisement
    HOME: (boolean) 1 als de Agent een Home Agent is
    FOREIGN: (boolean) 1 als de Agent een Foreign Agent is
    RLIFETIME: (integer) De registration lifetime (in seconden) te gebruiken in de Advertisement
    LIFETIME: (integer) De lifetime (in seconden) te gebruiken in de Advertisement
    INTERVAL: Het interval (in milliseconden) tussen twee Advertisements

  B) VisitorList
  --------------
    IP: (IPAddress) het IP-adres van de Foreign Agent

  C) HomeRequestProcess
  ---------------------
    LIFETIME: (integer) De maximaal toegelaten lifetime door de Home Agent

  D) Encapsulator
  ---------------
    SRC: (IPAddress) Het IP-adres van de Home Agent

  E) RegistrationRequestSender
  ----------------------------
    HOMEADDRESS: (IPAddress) Het Home Address te gebruiken in Registration Requests
    HOMEAGENT: (IPAddress) Het Home Agent Address te gebruiken in Registration Requests

Verder zijn er ook sommige elementen met handlers

  F) ForeignRequestProcess
  ------------------------
    -write addOwnIP IP: (IPAddress) Voegt een IP-adres van de Foreign Agent toe aan het element

  G) HomeRequestRequestProcess
  ------------------------
    -write addHomeAgent IP: (IPAddress) Voegt een IP-adres van de Home Agent toe aan het element

  H) RegistrationRequestSender
  ----------------------------
    -read gateway: Geeft het IP-adres van de Agent waarbij de Mobile Node geregistreerd is, te gebruiken als gateway.
  

3) Testen van de features
============================

Om de normale werking te testen, wordt een uitgebreide versie van het opgegeven script gebruikt. Voor het testen van specifieke functionaliteit dient telkens een kleine aanpassing aan scripts en/of broncode (+hercompilatie) aangebracht te worden. De vereiste aanpassingen worden hier opgelijst. Zo vermijden we een hele waslijst aan verschillende configuraties van broncode in het project, enkel voor tests. Op deze manier weet de tester ook goed wat hij precies aan het testen is; het doel van deze tests is om de aanwezigheid van specifieke functionaliteit te verifiëren en niet om snel te zien of geen test cases foutlopen.

  Testen van error codes in Registration Replies
  ----------------------------------------------
    -Lijnen code zijn in commentaar toegevoegd aan RegistrationRequestSender.makePacket(), HomeRequestProcess.makeReply() om dit te testen. Er moet telkens 1 lijn ingeschakeld worden om een error code (of silent discard) te activeren. Ook kan een SetUDPChecksum uit de scripts verwijderd worden om een silent discard te activeren.

  Sequence number rollover
  ------------------------
    -Er zijn drie lijnen code voorzien in AgentAdvertisementSender.run_timer() die deze situatie veroorzaken; om de seconde wordt een Agent reset gedetecteerd via de sequence numers en wordt opnieuw geregistreerd.

  Registratie timeout
  -------------------
    -Om reregistratie door lage remaining lifetime te testen, dient de geadverteerde registration lifetime (argument RLIFETIME) in de Foreign en Home Agent scripts op een lage waarde (bv. 12) ingesteld te worden. Reregistratie wordt gestart van zodra de remaining lifetime onder de 10 seconden gaat.
    -Om effectieve timeout te testen, dient reregistatie geblokkeerd te worden. Hiervoor is 1 lijn code voorzien in RegistrationRequestSender.push() (_hasReregistered = true)

  Move detection
  --------------
    -Move detection gebeurt adhv het algoritme in de RFC: wanneer geen advertisements meer ontvangen worden van de bij geregistreerde host, wordt aangenomen dat de mobile node zich heeft verplaatst. Er wordt meteen geregistreerd bij een andere Agent als er al andere Advertisements ontvangen zijn, of anders wordt op andere advertisements gewacht. Beide gevallen komen voor in de standaardtest. 

    -Om te testen wat zou gebeuren moesten Advertisements verloren gaan, kan de lifetime van de Advertisements (argument LIFETIME) lager dan het interval (argumentINTERVAL, milliseconden) ingesteld worden (bv 2 en 5000). Omdat de lifetime van de registratie zelf hier niet verstreken wordt, blijven de Home en Foreign Agent de registratie als geldig beschouwen en blijft de Mobile Node pakketten ontvangen totdat andere Advertisements toekomen.

    -Om te testen wat zou gebeuren moest geen movement gedetecteerd worden, kan de lifetime (arugment LIFETIME) van de Agents erg hoog ingesteld worden (bv. 300). De Mobile Node zal geen movement detecteren en bij de Foreign Agent geregistreerd blijven.


4) Enkele opmerkingen bij de code
=================================
-De code is getest en werkend bevonden op een cleane install van Click op het referentieplatform.

-Click waarschuwt voor expensive packet::push, dit kan opgelost worden door in include/click/packet.hh de default_headroom aan te passen van 28 naar (bijvoorbeeld) 48. De default_headroom van 28 wordt gebruikt door de ICMPPingSource, maar dit is niet voldoende voor een tweede IP header (voor tunneling) en een Ethernet header. Indien dit niet aangepast wordt, zal de code nog steeds werken maar een waarschuwing geven.

-Er is heel wat output voorzien in de elementen om te volgen wat er precies aan het gebeuren is. Standaard staat de output uitgecomment. Om de output makkelijk aan- en uit te zetten, zijn de scriptjes addoutput en removeoutput voorzien. Wees voorzichtig bij het runnen van de scripts; als het removescript meerdere keren na elkaar gerund wordt, zal het addscript ook meerdere keren moeten worden gerund om de output terug te krijgen! De scripts werken enkel als ze in elements/local/ gerund worden. Deze output, in combinatie met de voorziene dumps zou moeten volstaan om de werking van onze code aan te tonen.

-Om de code te runnen: Extraheer de inhoud van elements/ naar de Click-installatie (elements/local/), en compileer zoals gewoonlijk na het toevoegen van nieuwe elementen. Extraheer ook de scripts/ map en run Click met scripts/ipnetwork.click. Merk op dat ipnetwork.click een onaangepaste versie is van het opgegeven script; enkel de scripts voor de agents en mobile node zijn aangepast.
